type CommissionStatements {
    _id : ID,
    statementId : ID,
    statementFromDetails : [ agentDetails ],
    statementFromEmail : String,
    statementFrom : String,
    statementToDetails : [ agentDetails ],
    statementToEmail : String,
    statementTo : String,
    statementDate : String,
    invoiceType : String,
    eventsMonth : String,
    emailedDate : String,
    totalAmountToPay : Float,
    totalCommissionPayableToYou : Float,
    totalGrossSalesReceivedByYou : Float,
    totalDiscounts : Float,
    invoicesIncOnStatement: [ invoicesIncOnStatement ],
    totalVATOnComms : Float
}

type invoicesIncOnStatement {
    _id : ID,
    statementId : ID
    agentDetails: [ agentDetails ],
    invoiceDate : String,
    invoiceRef : String,
    invoiceTo : String,
    invoiceFrom : String,
    eventType : String,
    eventRef : String,
    eventName : String,
    eventCommences : String,
    invoiceTotal : Float,
    totalCommDue : Float,
    totalSalesReceived : Float,
    totalDiscounts : Float,
    vatOnComms : Float,
    isVATRegistered : Boolean,
    lineItemsArray : [ lineItemsArray ],
    currency : String,
    eventsMonth : String,
    hasInvoiceBeenOpenedByRecipient : Boolean,
    hasInvoiceBeenSent : Boolean,
    isOnStatement : Boolean,
}

type lineItemsArray {
    subtotalTicketsSold : Float,
    ticketType : String,
    lineSalesReceived : Float,
    lineSubtotal : Float,
    lineCommSubtotal : Float,
    lineItemVATOnComm : Float,
    ticketCategoryTotalDue : Float,
    totalTicketTypeDiscount : Float,
    subtotalTicketTypeLessDiscount : Float,
    ticketPrice : Float,
    newArray : [ newArray ]
}

type newArray {
    _id : ID
    id : ID,
    bookingRef : String,
    bookedOn : String,
    client : String,
    ticketoption : String,
    ticketquantity : Float,
    ticketprice : Float,
    totaldue : Float,
    totaldueCalc : Float,
    totalpaid : Float,
    balancedue : Float,
    commissionRatePercent : Float,
    commissionpayable : Float,
    agentCode : String,
    clientOwnerAtPurchaseDate : String,
    bookingStatus : String,
    eventName : String,
    eventOwner : String,
    eventCommences : String,
    discountRate : Float,
    discountTotal : Float,
    discountedTotalDue : Float,
    eventRef : String,
    eventType : String
}

type agentDetails {
    id : ID
    legalName : String,
    agentContact : String,
    agentTradingName : String,
    agentEmail : String,
    agentAddress1 : String,
    agentAddress2 : String,
    agentAddress3 : String,
    agentCity : String,
    agentCounty : String,
    agentCountry : String,
    agentPostCode : String,
    VATRegNo : String,
    agentVATRegistered : Boolean,
    agentCompanyNumber : String,
}

type Query {
#   getAllCommissionStatements(idComp: ID, CompName: String, idUser: ID ): [CommissionStatements]
  getAllCommissionStatements: [CommissionStatements]
}